!function(){"use strict";class t{constructor(t,e,s){this._title=t.title,this._link=t.link,this._templateSelector=e,this._handleCardClick=s}_getTemplate(){return document.querySelector(this._templateSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._element.querySelector(".card__icon-bin").addEventListener("click",(()=>{this._deleteCard()})),this._element.querySelector(".card__icon").addEventListener("click",(t=>{this._toggleLike(t)})),this._element.querySelector(".card__img").addEventListener("click",(t=>{this._handleCardClick()}))}_toggleLike(t){t.target.classList.toggle("card__icon_active")}_deleteCard(){this._element.remove(),this._element=null}generateCard(){this._element=this._getTemplate();const t=this._element.querySelector(".card__img"),e=this._element.querySelector(".card__title");return t.src=this._link,t.alt=`Photo of ${this._title}`,e.textContent=this._title,this._setEventListeners(),this._element}}class e{constructor(t,e){this._settings=t,this._formElement=e}_showInputError(t,e){const s=this._formElement.querySelector(`.${t.id}-error`);t.classList.add(this._settings.inputErrorClass),s.textContent=e,s.classList.add(this._settings.errorClass)}_hasInvalidInput(){return this._inputList.some((t=>!t.validity.valid))}_hideInputError(t){const e=this._formElement.querySelector(`.${t.id}-error`);t.classList.remove(this._settings.inputErrorClass),e.classList.remove(this._settings.errorClass),e.textContent="."}_checkInputValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}_toggleButtonState(){this._hasInvalidInput()?this._disableButton():(this._buttonElement.classList.remove(this._settings.inactiveButtonClass),this._buttonElement.disabled=!1)}_disableButton(){this._buttonElement.classList.add(this._settings.inactiveButtonClass),this._buttonElement.disabled=!0}_setEventListeners(){this._formElement.addEventListener("reset",(()=>{this._disableFormAfterSubmit()})),this._inputList.forEach((t=>{t.addEventListener("input",(e=>{this._checkInputValidity(t),this._toggleButtonState()}))}))}_disableFormAfterSubmit(){this._disableButton()}enableValidation(){this._inputList=[...this._formElement.querySelectorAll(this._settings.inputSelector)],this._buttonElement=this._formElement.querySelector(this._settings.submitButtonSelector),this._disableButton(),this._setEventListeners()}}class s{constructor(t){this._popup=document.querySelector(t),this._closeButton=this._popup.querySelector(".popup__close-btn")}open(){this._popup.classList.add("popup_opened")}close=()=>{this._popup.classList.remove("popup_opened")};_handleEscClose=t=>{"Escape"===t.key&&this.close()};_handleMouseClickClose=t=>{t.target.classList.contains("popup_opened")&&this.close()};setEventListeners(){document.addEventListener("keydown",this._handleEscClose),document.addEventListener("mousedown",this._handleMouseClickClose),this._closeButton.addEventListener("click",this.close)}}class i extends s{constructor(t,e){super(t),this._submitCallbackFunction=e,this._inputSelector=".form__input",this._form=this._popup.querySelector(".form"),this._inputs=Array.from(this._form.querySelectorAll(this._inputSelector))}_getInputValues(){const t={};return this._inputs.forEach((e=>{t[e.name]=e.value})),t}_formSubmit(t){t.preventDefault(),this._submitCallbackFunction(this._getInputValues()),this.close(),this._form.reset()}setEventListeners(){this._form.addEventListener("submit",(t=>this._formSubmit(t))),super.setEventListeners()}prePopulateFields(t){this._inputs.forEach((e=>{e.value=t[e.name]}))}}const n={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit",inactiveButtonClass:"popup__field-submit_inactive",inputErrorClass:"form__input-error",errorClass:"popup__input-error_active"},o=document.querySelector(".profile__info-btn"),r=document.querySelector(".profile__add-btn"),l=document.querySelector(".cards"),a=Array.from(document.querySelectorAll(n.formSelector)),c=new class{constructor(t){let{nameSelector:e,jobSelector:s}=t;this._name=document.querySelector(e),this._job=document.querySelector(s)}getUserInfo(){return{name:this._name.textContent,job:this._job.textContent}}setUserInfo(t){let{name:e,job:s}=t;this._name.textContent=e,this._job.textContent=s}}({nameSelector:".profile__info-name",jobSelector:".profile__info-job"}),_=new class extends s{constructor(t){super(t),this._title=this._popup.querySelector(".img-popup__title"),this._image=this._popup.querySelector(".img-popup__img")}open(t){super.open(),this._image.src=t._link,this._image.alt=t._title,this._title.textContent=t._title}}(".img-popup");_.setEventListeners();const u=new i(".profile-popup",(t=>{c.setUserInfo(t)}));u.setEventListeners();const d=new i(".card-popup",(e=>{const s=new t(e,"#card-template",p);m.addItem(s.generateCard())}));d.setEventListeners();const m=new class{constructor(t,e){let{items:s,renderer:i}=t;this._renderedItems=s,this._renderer=i,this._container=document.querySelector(e)}addItem(t){this._container.prepend(t)}renderItems(){this._renderedItems.forEach((t=>this._renderer(t)))}}({items:[{title:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_yosemite.jpg"},{title:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_lake-louise.jpg"},{title:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_bald-mountains.jpg"},{title:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_latemar.jpg"},{title:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_vanoise.jpg"},{title:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_lago.jpg"}],renderer:e=>{var s;(s=new t(e,"#card-template",p)).generateCard(),l.prepend(s.generateCard())}},".cards");function p(){_.open(this)}m.renderItems(),r.addEventListener("click",(()=>d.open())),o.addEventListener("click",(function(){u.prePopulateFields(c.getUserInfo()),u.open()})),a.forEach((t=>{new e(n,t).enableValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,