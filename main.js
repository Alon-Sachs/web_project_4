!function(){"use strict";class e{constructor(e,t,s){this._title=e.title,this._link=e.link,this._templateSelector=t,this._handleCardClick=s}_getTemplate(){return document.querySelector(this._templateSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._element.querySelector(".card__icon-bin").addEventListener("click",(()=>{this._deleteCard()})),this._element.querySelector(".card__icon").addEventListener("click",(e=>{this._toggleLike(e)})),this._element.querySelector(".card__img").addEventListener("click",(e=>{this._handleCardClick(this._title,this._link)}))}_toggleLike(e){e.target.classList.toggle("card__icon_active")}_deleteCard(){this._element.remove(),this._element=null}generateCard(){this._element=this._getTemplate();const e=this._element.querySelector(".card__img"),t=this._element.querySelector(".card__title");return e.src=this._link,e.alt=`Photo of ${this._title}`,t.textContent=this._title,this._setEventListeners(),this._element}}class t{constructor(e,t){this._settings=e,this._formElement=t}_showInputError(e,t){const s=this._formElement.querySelector(`.${e.id}-error`);e.classList.add(this._settings.inputErrorClass),s.textContent=t,s.classList.add(this._settings.errorClass)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_hideInputError(e){const t=this._formElement.querySelector(`.${e.id}-error`);e.classList.remove(this._settings.inputErrorClass),t.classList.remove(this._settings.errorClass),t.textContent="."}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_toggleButtonState(){this._hasInvalidInput()?this._disableButton():(this._buttonElement.classList.remove(this._settings.inactiveButtonClass),this._buttonElement.disabled=!1)}_disableButton(){this._buttonElement.classList.add(this._settings.inactiveButtonClass),this._buttonElement.disabled=!0}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e)})),this._disableButton()}enableValidation(){this._inputList=[...this._formElement.querySelectorAll(this._settings.inputSelector)],this._buttonElement=this._formElement.querySelector(this._settings.submitButtonSelector),this._setEventListeners()}}class s{constructor(e){this._popup=document.querySelector(e),this._closeButton=this._popup.querySelector(".popup__close-btn")}open(){this._popup.classList.add("popup_opened"),this._setEventListeners()}close(){this._popup.classList.remove("popup_opened"),this._removeEventListeners()}_handleEscClose=e=>{"Escape"===e.key&&this.close()};_handleMouseClickClose=e=>{e.target.classList.contains("popup_opened")&&this.close()};_handleBtnClickClose=e=>{this.close()};_setEventListeners(){document.addEventListener("keydown",this._handleEscClose),document.addEventListener("mousedown",this._handleMouseClickClose),this._closeButton.addEventListener("click",this._handleBtnClickClose)}_removeEventListeners(){document.removeEventListener("keydown",this._handleEscClose),document.removeEventListener("mousedown",this._handleMouseClickClose),this._closeButton.removeEventListener("click",this._handleBtnClickClose)}}class i extends s{constructor(e,t){super(e),this._handleSubmit=t,this._form=this._popup.querySelector(".form"),this._inputs=Array.from(this._form.querySelectorAll(".form__input"))}_getInputValues(){const e={};return this._inputs.forEach((t=>{e[t.name]=t.value})),e}_onSubmit=e=>{e.preventDefault(),this._handleSubmit(this._getInputValues())};_setEventListeners(){super._setEventListeners(),this._form.addEventListener("submit",this._onSubmit)}_removeEventListeners(){super._removeEventListeners(),this._form.removeEventListener("submit",this._onSubmit)}close(){super.close(),this._form.reset()}prePopulateFields(e){this._inputs.forEach((t=>{t.value=e[t.name]}))}}const n={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit",inactiveButtonClass:"popup__field-submit_inactive",inputErrorClass:"form__input-error",errorClass:"popup__input-error_active"},o=document.querySelector(".profile__info-btn"),r=document.querySelector(".profile__add-btn"),l=(document.querySelector(".cards"),Array.from(document.querySelectorAll(n.formSelector))),a={},c=t=>{const s=new e(t,"#card-template",_);p.addItem(s.generateCard())};function _(e,t){d.open(e,t)}const u=new class{constructor(e){let{nameSelector:t,jobSelector:s}=e;this._name=document.querySelector(t),this._job=document.querySelector(s)}getUserInfo(){return{name:this._name.textContent,job:this._job.textContent}}setUserInfo(e){let{name:t,job:s}=e;this._name.textContent=t,this._job.textContent=s}}({nameSelector:".profile__info-name",jobSelector:".profile__info-job"}),d=new class extends s{constructor(e){super(e),this._title=this._popup.querySelector(".img-popup__title"),this._image=this._popup.querySelector(".img-popup__img")}open(e,t){super.open(),this._image.src=t,this._image.alt=e,this._title.textContent=e}}(".img-popup"),h=new i(".profile-popup",(e=>{u.setUserInfo(e),h.close()})),m=new i(".card-popup",(e=>{c(e),m.close()})),p=new class{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._container=document.querySelector(t)}addItem(e){this._container.prepend(e)}renderItems(){this._items.forEach(this._renderer)}}({items:[{title:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_yosemite.jpg"},{title:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_lake-louise.jpg"},{title:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_bald-mountains.jpg"},{title:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_latemar.jpg"},{title:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_vanoise.jpg"},{title:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_lago.jpg"}],renderer:c},".cards");p.renderItems(),r.addEventListener("click",(()=>{m.open(),a["card-popup__form"].resetValidation()})),o.addEventListener("click",(function(){h.prePopulateFields(u.getUserInfo()),h.open(),a.popup__form.resetValidation()})),l.forEach((e=>{const s=new t(n,e);s.enableValidation(),a[e.id]=s}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q2pCdkgsS0FBSzBILFdBQWFsSCxTQUFTQyxjQUFjNEcsRUFDN0MsQ0FFQWYsUUFBUXFCLEdBQ0ozSCxLQUFLMEgsV0FBV0UsUUFBUUQsRUFDNUIsQ0FFQUUsY0FDSTdILEtBQUt3SCxPQUFPbEUsUUFBUXRELEtBQUt5SCxVQUM3QixHSHdCc0IsQ0FDeEJILE1EdEMwQixDQUMxQixDQUNFcEgsTUFBTyxrQkFDUEUsS0FBTSxvRkFFUixDQUNFRixNQUFPLGNBQ1BFLEtBQU0sdUZBRVIsQ0FDRUYsTUFBTyxpQkFDUEUsS0FBTSwwRkFFUixDQUNFRixNQUFPLFVBQ1BFLEtBQU0sbUZBRVIsQ0FDRUYsTUFBTyx3QkFDUEUsS0FBTSxtRkFFUixDQUNFRixNQUFPLGlCQUNQRSxLQUFNLGlGQ2VhbUgsU0FBVXRCLEdBQzlCLFVBRUhJLEVBQU13QixjQVVOL0IsRUFBbUJoRixpQkFBaUIsU0FBUyxLQUMzQ3NHLEVBQWFuRCxPQUNiK0IsRUFBZ0Isb0JBQW9CekMsaUJBQWlCLElBRXZEc0MsRUFBa0IvRSxpQkFBaUIsU0FYbkMsV0FDRXFHLEVBQWlCekIsa0JBQWtCYyxFQUFRTSxlQUMzQ0ssRUFBaUJsRCxPQUNqQitCLEVBQTZCLFlBQUV6QyxpQkFDakMsSUFXQXdDLEVBQVl6QyxTQUFReEIsSUFDbEIsTUFBTWdHLEVBQW1CLElBQUlsRyxFQUFjK0QsRUFBa0I3RCxHQUM3RGdHLEVBQWlCckUsbUJBQ2pCdUMsRUFBZ0JsRSxFQUFLTyxJQUFNeUYsQ0FBZ0IsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcbiAgICBjb25zdHJ1Y3RvcihkYXRhLCB0ZW1wbGF0ZVNlbGVjdG9yLCBoYW5kbGVDYXJkQ2xpY2spIHtcclxuICAgICAgICB0aGlzLl90aXRsZSA9IGRhdGEudGl0bGU7XHJcbiAgICAgICAgdGhpcy5fbGluayA9IGRhdGEubGluaztcclxuICAgICAgICB0aGlzLl90ZW1wbGF0ZVNlbGVjdG9yID0gdGVtcGxhdGVTZWxlY3RvcjtcclxuICAgICAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XHJcbiAgICB9XHJcblxyXG4gICAgX2dldFRlbXBsYXRlKCkge1xyXG4gICAgICAgIGNvbnN0IGNhcmRUZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fdGVtcGxhdGVTZWxlY3RvcikuY29udGVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRcIikuY2xvbmVOb2RlKHRydWUpO1xyXG4gICAgICAgIHJldHVybiBjYXJkVGVtcGxhdGU7XHJcbiAgICB9XHJcblxyXG4gICAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgICAgIGNvbnN0IGRlbGV0ZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pY29uLWJpblwiKTtcclxuICAgICAgICBkZWxldGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5fZGVsZXRlQ2FyZCgpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faWNvblwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5fdG9nZ2xlTGlrZShlKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltZ1wiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrKHRoaXMuX3RpdGxlLCB0aGlzLl9saW5rKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgX3RvZ2dsZUxpa2UoZSkge1xyXG4gICAgICAgIGUudGFyZ2V0LmNsYXNzTGlzdC50b2dnbGUoXCJjYXJkX19pY29uX2FjdGl2ZVwiKTtcclxuICAgIH1cclxuXHJcbiAgICBfZGVsZXRlQ2FyZCgpIHtcclxuICAgICAgICB0aGlzLl9lbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBnZW5lcmF0ZUNhcmQoKSB7XHJcbiAgICAgICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XHJcblxyXG4gICAgICAgIGNvbnN0IGNhcmRJbWcgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1nXCIpO1xyXG4gICAgICAgIGNvbnN0IGNhcmRUaXRsZSA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX190aXRsZVwiKTtcclxuXHJcbiAgICAgICAgY2FyZEltZy5zcmMgPSB0aGlzLl9saW5rO1xyXG4gICAgICAgIGNhcmRJbWcuYWx0ID0gYFBob3RvIG9mICR7dGhpcy5fdGl0bGV9YDtcclxuICAgICAgICBjYXJkVGl0bGUudGV4dENvbnRlbnQgPSB0aGlzLl90aXRsZTtcclxuXHJcbiAgICAgICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XHJcblxyXG4gICAgfVxyXG5cclxuXHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICBjb25zdHJ1Y3RvcihzZXR0aW5ncywgZm9ybSkge1xyXG4gICAgdGhpcy5fc2V0dGluZ3MgPSBzZXR0aW5ncztcclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gZm9ybTtcclxuICB9XHJcblxyXG4gIF9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIGVycm9yTWVzc2FnZSkge1xyXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fc2V0dGluZ3MuaW5wdXRFcnJvckNsYXNzKTtcclxuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGVycm9yTWVzc2FnZTtcclxuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX3NldHRpbmdzLmVycm9yQ2xhc3MpO1xyXG5cclxuICB9XHJcblxyXG4gIF9oYXNJbnZhbGlkSW5wdXQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCk7XHJcbiAgfTtcclxuXHJcbiAgX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCkge1xyXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fc2V0dGluZ3MuaW5wdXRFcnJvckNsYXNzKTtcclxuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX3NldHRpbmdzLmVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gXCIuXCI7XHJcbiAgfTtcclxuXHJcbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpIHtcclxuICAgIGlmIChpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBfdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XHJcbiAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KCkpIHtcclxuICAgICAgdGhpcy5fZGlzYWJsZUJ1dHRvbigpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX3NldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmRpc2FibGVkID0gZmFsc2U7XHJcblxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX2Rpc2FibGVCdXR0b24oKSB7XHJcbiAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fc2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICB0aGlzLl9idXR0b25FbGVtZW50LmRpc2FibGVkID0gdHJ1ZTtcclxuICB9XHJcblxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoZSkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpO1xyXG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICByZXNldFZhbGlkYXRpb24oKXtcclxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKGlucHV0ID0+IHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXQpO1xyXG4gICAgfSlcclxuICAgIHRoaXMuX2Rpc2FibGVCdXR0b24oKTtcclxuICB9XHJcblxyXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBbLi4udGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9zZXR0aW5ncy5pbnB1dFNlbGVjdG9yKV07XHJcbiAgICB0aGlzLl9idXR0b25FbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9zZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIH1cclxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yKHBvcHVwKSB7XHJcbiAgICAgICAgdGhpcy5fcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwKTtcclxuICAgICAgICB0aGlzLl9jbG9zZUJ1dHRvbiA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Nsb3NlLWJ0blwiKTtcclxuICAgIH1cclxuXHJcbiAgICBvcGVuKCkge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9vcGVuZWRcIik7XHJcbiAgICAgICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIH1cclxuXHJcbiAgICBjbG9zZSAoKXtcclxuICAgICAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QucmVtb3ZlKFwicG9wdXBfb3BlbmVkXCIpO1xyXG4gICAgICAgIHRoaXMuX3JlbW92ZUV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgX2hhbmRsZUVzY0Nsb3NlID0gKGV2dCkgPT4ge1xyXG4gICAgICAgIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgX2hhbmRsZU1vdXNlQ2xpY2tDbG9zZSA9IChldnQpID0+IHtcclxuICAgICAgICBpZiAoZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJwb3B1cF9vcGVuZWRcIikpIHtcclxuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBfaGFuZGxlQnRuQ2xpY2tDbG9zZSA9IChldnQpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCB0aGlzLl9oYW5kbGVNb3VzZUNsaWNrQ2xvc2UpO1xyXG4gICAgICAgIHRoaXMuX2Nsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLl9oYW5kbGVCdG5DbGlja0Nsb3NlKTtcclxuICAgIH1cclxuXHJcbiAgICBfcmVtb3ZlRXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgdGhpcy5faGFuZGxlTW91c2VDbGlja0Nsb3NlKTtcclxuICAgICAgICB0aGlzLl9jbG9zZUJ1dHRvbi5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5faGFuZGxlQnRuQ2xpY2tDbG9zZSk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cCwgc3VibWl0Q2FsbGJhY2tGdW5jdGlvbikge1xyXG4gICAgICAgIHN1cGVyKHBvcHVwKTtcclxuICAgICAgICB0aGlzLl9oYW5kbGVTdWJtaXQgPSBzdWJtaXRDYWxsYmFja0Z1bmN0aW9uO1xyXG4gICAgICAgIGNvbnN0IGlucHV0U2VsZWN0b3IgPSBcIi5mb3JtX19pbnB1dFwiO1xyXG4gICAgICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLmZvcm1cIik7XHJcbiAgICAgICAgdGhpcy5faW5wdXRzID0gQXJyYXkuZnJvbSh0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoaW5wdXRTZWxlY3RvcikpO1xyXG4gICAgfVxyXG5cclxuICAgIF9nZXRJbnB1dFZhbHVlcygpIHtcclxuICAgICAgICBjb25zdCB2YWx1ZXMgPSB7fTtcclxuICAgICAgICB0aGlzLl9pbnB1dHMuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICAgICAgICAgICAgdmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWU7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIHZhbHVlcztcclxuICAgIH1cclxuXHJcbiAgICBfb25TdWJtaXQgPSAoZSkgPT4ge1xyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB0aGlzLl9oYW5kbGVTdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XHJcbiAgICB9O1xyXG5cclxuICAgIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICBzdXBlci5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgICAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgdGhpcy5fb25TdWJtaXQpO1xyXG4gICAgfVxyXG5cclxuICAgIF9yZW1vdmVFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICBzdXBlci5fcmVtb3ZlRXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgICAgICB0aGlzLl9mb3JtLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgdGhpcy5fb25TdWJtaXQpO1xyXG4gICAgfVxyXG5cclxuICAgIGNsb3NlKCkge1xyXG4gICAgICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgICAgICAgdGhpcy5fZm9ybS5yZXNldCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHByZVBvcHVsYXRlRmllbGRzKGRhdGEpIHtcclxuICAgICAgICB0aGlzLl9pbnB1dHMuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICAgICAgICAgICAgaW5wdXQudmFsdWUgPSBkYXRhW2lucHV0Lm5hbWVdO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcbiIsImV4cG9ydCBjb25zdCBpbml0aWFsQ2FyZHMgPSBbXHJcbiAge1xyXG4gICAgdGl0bGU6IFwiWW9zZW1pdGUgVmFsbGV5XCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vd2ViLWNvZGUvbW92ZWRfeW9zZW1pdGUuanBnXCJcclxuICB9LFxyXG4gIHtcclxuICAgIHRpdGxlOiBcIkxha2UgTG91aXNlXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vd2ViLWNvZGUvbW92ZWRfbGFrZS1sb3Vpc2UuanBnXCJcclxuICB9LFxyXG4gIHtcclxuICAgIHRpdGxlOiBcIkJhbGQgTW91bnRhaW5zXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vd2ViLWNvZGUvbW92ZWRfYmFsZC1tb3VudGFpbnMuanBnXCJcclxuICB9LFxyXG4gIHtcclxuICAgIHRpdGxlOiBcIkxhdGVtYXJcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS93ZWItY29kZS9tb3ZlZF9sYXRlbWFyLmpwZ1wiXHJcbiAgfSxcclxuICB7XHJcbiAgICB0aXRsZTogXCJWYW5vaXNlIE5hdGlvbmFsIFBhcmtcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS93ZWItY29kZS9tb3ZlZF92YW5vaXNlLmpwZ1wiXHJcbiAgfSxcclxuICB7XHJcbiAgICB0aXRsZTogXCJMYWdvIGRpIEJyYWllc1wiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3dlYi1jb2RlL21vdmVkX2xhZ28uanBnXCJcclxuICB9XHJcbl07XHJcblxyXG4vL3ZhbGlkYXRpb24gY29uZmlnXHJcbmV4cG9ydCBjb25zdCB2YWxpZGF0aW9uQ29uZmlnID0ge1xyXG4gIGZvcm1TZWxlY3RvcjogXCIuZm9ybVwiLFxyXG4gIGlucHV0U2VsZWN0b3I6IFwiLmZvcm1fX2lucHV0XCIsXHJcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLmZvcm1fX3N1Ym1pdFwiLFxyXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwicG9wdXBfX2ZpZWxkLXN1Ym1pdF9pbmFjdGl2ZVwiLFxyXG4gIGlucHV0RXJyb3JDbGFzczogXCJmb3JtX19pbnB1dC1lcnJvclwiLFxyXG4gIGVycm9yQ2xhc3M6IFwicG9wdXBfX2lucHV0LWVycm9yX2FjdGl2ZVwiXHJcbn1cclxuXHJcbi8vcHJvZmlsZSBlZGl0IGZvcm0gZWxlbWVudHNcclxuZXhwb3J0IGNvbnN0IGVkaXRQcm9maWxlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19pbmZvLWJ0blwiKTtcclxuZXhwb3J0IGNvbnN0IG5ld0NhcmRQb3B1cEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYWRkLWJ0blwiKTtcclxuZXhwb3J0IGNvbnN0IGNhcmRzQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkc1wiKTtcclxuZXhwb3J0IGNvbnN0IGluaXRhbEZvcm1zID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHZhbGlkYXRpb25Db25maWcuZm9ybVNlbGVjdG9yKSk7IiwiaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcclxuaW1wb3J0IENhcmQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xyXG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcclxuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XHJcbmltcG9ydCB7IGluaXRpYWxDYXJkcywgdmFsaWRhdGlvbkNvbmZpZywgZWRpdFByb2ZpbGVCdXR0b24sIG5ld0NhcmRQb3B1cEJ1dHRvbiwgY2FyZHNDb250YWluZXIsIGluaXRhbEZvcm1zIH0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xyXG5cclxuY29uc3QgZm9ybXNWYWxpZGF0b3JzID0ge307XHJcblxyXG4vL2NhcmQgZnVuY3Rpb25zXHJcbmNvbnN0IHJlbmRlckNhcmQgPSAoY2FyZCkgPT4ge1xyXG4gIGNvbnN0IG5ld0NhcmQgPSBuZXcgQ2FyZChjYXJkLCBcIiNjYXJkLXRlbXBsYXRlXCIsIGhhbmRsZUltYWdlQ2xpY2spO1xyXG4gIGNhcmRzLmFkZEl0ZW0obmV3Q2FyZC5nZW5lcmF0ZUNhcmQoKSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUltYWdlQ2xpY2sobmFtZSwgbGluaykge1xyXG4gIGltYWdlUG9wdXAub3BlbihuYW1lLCBsaW5rKTtcclxufVxyXG5cclxuXHJcbi8vaW5pdGlhdGUgb2JqZWN0c1xyXG5jb25zdCBwcm9maWxlID0gbmV3IFVzZXJJbmZvKHsgbmFtZVNlbGVjdG9yOiBcIi5wcm9maWxlX19pbmZvLW5hbWVcIiwgam9iU2VsZWN0b3I6IFwiLnByb2ZpbGVfX2luZm8tam9iXCIgfSk7XHJcblxyXG5jb25zdCBpbWFnZVBvcHVwID0gbmV3IFBvcHVwV2l0aEltYWdlKFwiLmltZy1wb3B1cFwiKTtcclxuXHJcbmNvbnN0IGVkaXRQcm9maWxlUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcIi5wcm9maWxlLXBvcHVwXCIsIChkYXRhKSA9PiB7XHJcbiAgcHJvZmlsZS5zZXRVc2VySW5mbyhkYXRhKTtcclxuICBlZGl0UHJvZmlsZVBvcHVwLmNsb3NlKCk7XHJcbn0pO1xyXG5cclxuY29uc3QgYWRkQ2FyZFBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXCIuY2FyZC1wb3B1cFwiLCAoZGF0YSkgPT4ge1xyXG4gIHJlbmRlckNhcmQoZGF0YSk7XHJcbiAgYWRkQ2FyZFBvcHVwLmNsb3NlKCk7XHJcbn0pO1xyXG5cclxuY29uc3QgY2FyZHMgPSBuZXcgU2VjdGlvbih7XHJcbiAgaXRlbXM6IGluaXRpYWxDYXJkcywgcmVuZGVyZXI6IHJlbmRlckNhcmRcclxufSwgXCIuY2FyZHNcIik7XHJcblxyXG5jYXJkcy5yZW5kZXJJdGVtcygpO1xyXG5cclxuLy9wcm9maWxlIHBvcHVwIG9wZW4gYW5kIHByZXBvcHVsYXRlXHJcbmZ1bmN0aW9uIG9wZW5Qcm9maWxlUG9wdXAoKSB7XHJcbiAgZWRpdFByb2ZpbGVQb3B1cC5wcmVQb3B1bGF0ZUZpZWxkcyhwcm9maWxlLmdldFVzZXJJbmZvKCkpO1xyXG4gIGVkaXRQcm9maWxlUG9wdXAub3BlbigpO1xyXG4gIGZvcm1zVmFsaWRhdG9yc1tcInBvcHVwX19mb3JtXCJdLnJlc2V0VmFsaWRhdGlvbigpO1xyXG59XHJcblxyXG4vL3NldCBidXR0b24gZXZlbnQgbGlzdGVuZXJzXHJcbm5ld0NhcmRQb3B1cEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGFkZENhcmRQb3B1cC5vcGVuKCk7XHJcbiAgZm9ybXNWYWxpZGF0b3JzW1wiY2FyZC1wb3B1cF9fZm9ybVwiXS5yZXNldFZhbGlkYXRpb24oKTtcclxufSk7XHJcbmVkaXRQcm9maWxlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBvcGVuUHJvZmlsZVBvcHVwKTtcclxuXHJcblxyXG4vL2luaXRpYXRlIGZvcm1zIHZhbGlkYXRpb25cclxuaW5pdGFsRm9ybXMuZm9yRWFjaChmb3JtID0+IHtcclxuICBjb25zdCBuZXdGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IodmFsaWRhdGlvbkNvbmZpZywgZm9ybSk7XHJcbiAgbmV3Rm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbiAgZm9ybXNWYWxpZGF0b3JzW2Zvcm0uaWRdID0gbmV3Rm9ybVZhbGlkYXRvcjtcclxufSk7XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcclxuICAgIGNvbnN0cnVjdG9yKHsgbmFtZVNlbGVjdG9yLCBqb2JTZWxlY3RvciB9KSB7XHJcbiAgICAgICAgdGhpcy5fbmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobmFtZVNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9qb2IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGpvYlNlbGVjdG9yKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRVc2VySW5mbygpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBuYW1lOiB0aGlzLl9uYW1lLnRleHRDb250ZW50LFxyXG4gICAgICAgICAgICBqb2I6IHRoaXMuX2pvYi50ZXh0Q29udGVudFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzZXRVc2VySW5mbyh7IG5hbWUsIGpvYiB9KSB7XHJcbiAgICAgICAgdGhpcy5fbmFtZS50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5fam9iLnRleHRDb250ZW50ID0gam9iO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IFBvcHVwIGZyb20gJy4vUG9wdXAuanMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cCkge1xyXG4gICAgICAgIHN1cGVyKHBvcHVwKTtcclxuICAgICAgICB0aGlzLl90aXRsZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIuaW1nLXBvcHVwX190aXRsZVwiKTtcclxuICAgICAgICB0aGlzLl9pbWFnZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIuaW1nLXBvcHVwX19pbWdcIik7XHJcbiAgICB9XHJcblxyXG4gICAgb3BlbihuYW1lLCBsaW5rKSB7XHJcbiAgICAgICAgc3VwZXIub3BlbigpO1xyXG4gICAgICAgIHRoaXMuX2ltYWdlLnNyYyA9IGxpbms7XHJcbiAgICAgICAgdGhpcy5faW1hZ2UuYWx0ID0gbmFtZTtcclxuICAgICAgICB0aGlzLl90aXRsZS50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuICAgIGNvbnN0cnVjdG9yKHsgaXRlbXMsIHJlbmRlcmVyIH0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XHJcbiAgICAgICAgdGhpcy5faXRlbXMgPSBpdGVtcztcclxuICAgICAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xyXG4gICAgfVxyXG5cclxuICAgIGFkZEl0ZW0oZWxlbWVudCkge1xyXG4gICAgICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlckl0ZW1zKCkge1xyXG4gICAgICAgIHRoaXMuX2l0ZW1zLmZvckVhY2godGhpcy5fcmVuZGVyZXIpO1xyXG4gICAgfVxyXG59Il0sIm5hbWVzIjpbIkNhcmQiLCJjb25zdHJ1Y3RvciIsImRhdGEiLCJ0ZW1wbGF0ZVNlbGVjdG9yIiwiaGFuZGxlQ2FyZENsaWNrIiwidGhpcyIsIl90aXRsZSIsInRpdGxlIiwiX2xpbmsiLCJsaW5rIiwiX3RlbXBsYXRlU2VsZWN0b3IiLCJfaGFuZGxlQ2FyZENsaWNrIiwiX2dldFRlbXBsYXRlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudCIsImNsb25lTm9kZSIsIl9zZXRFdmVudExpc3RlbmVycyIsIl9lbGVtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9kZWxldGVDYXJkIiwiZSIsIl90b2dnbGVMaWtlIiwidGFyZ2V0IiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwicmVtb3ZlIiwiZ2VuZXJhdGVDYXJkIiwiY2FyZEltZyIsImNhcmRUaXRsZSIsInNyYyIsImFsdCIsInRleHRDb250ZW50IiwiRm9ybVZhbGlkYXRvciIsInNldHRpbmdzIiwiZm9ybSIsIl9zZXR0aW5ncyIsIl9mb3JtRWxlbWVudCIsIl9zaG93SW5wdXRFcnJvciIsImlucHV0RWxlbWVudCIsImVycm9yTWVzc2FnZSIsImVycm9yRWxlbWVudCIsImlkIiwiYWRkIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsIl9oYXNJbnZhbGlkSW5wdXQiLCJfaW5wdXRMaXN0Iiwic29tZSIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJfZGlzYWJsZUJ1dHRvbiIsIl9idXR0b25FbGVtZW50IiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsImRpc2FibGVkIiwiZm9yRWFjaCIsInJlc2V0VmFsaWRhdGlvbiIsImlucHV0IiwiZW5hYmxlVmFsaWRhdGlvbiIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJQb3B1cCIsInBvcHVwIiwiX3BvcHVwIiwiX2Nsb3NlQnV0dG9uIiwib3BlbiIsImNsb3NlIiwiX3JlbW92ZUV2ZW50TGlzdGVuZXJzIiwiX2hhbmRsZUVzY0Nsb3NlIiwiZXZ0Iiwia2V5IiwiX2hhbmRsZU1vdXNlQ2xpY2tDbG9zZSIsImNvbnRhaW5zIiwiX2hhbmRsZUJ0bkNsaWNrQ2xvc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiUG9wdXBXaXRoRm9ybSIsInN1Ym1pdENhbGxiYWNrRnVuY3Rpb24iLCJzdXBlciIsIl9oYW5kbGVTdWJtaXQiLCJfZm9ybSIsIl9pbnB1dHMiLCJBcnJheSIsImZyb20iLCJfZ2V0SW5wdXRWYWx1ZXMiLCJ2YWx1ZXMiLCJuYW1lIiwidmFsdWUiLCJfb25TdWJtaXQiLCJwcmV2ZW50RGVmYXVsdCIsInJlc2V0IiwicHJlUG9wdWxhdGVGaWVsZHMiLCJ2YWxpZGF0aW9uQ29uZmlnIiwiZm9ybVNlbGVjdG9yIiwiZWRpdFByb2ZpbGVCdXR0b24iLCJuZXdDYXJkUG9wdXBCdXR0b24iLCJpbml0YWxGb3JtcyIsImZvcm1zVmFsaWRhdG9ycyIsInJlbmRlckNhcmQiLCJjYXJkIiwibmV3Q2FyZCIsImhhbmRsZUltYWdlQ2xpY2siLCJjYXJkcyIsImFkZEl0ZW0iLCJpbWFnZVBvcHVwIiwicHJvZmlsZSIsIl9yZWYiLCJuYW1lU2VsZWN0b3IiLCJqb2JTZWxlY3RvciIsIl9uYW1lIiwiX2pvYiIsImdldFVzZXJJbmZvIiwiam9iIiwic2V0VXNlckluZm8iLCJfcmVmMiIsIl9pbWFnZSIsImVkaXRQcm9maWxlUG9wdXAiLCJhZGRDYXJkUG9wdXAiLCJjb250YWluZXJTZWxlY3RvciIsIml0ZW1zIiwicmVuZGVyZXIiLCJfaXRlbXMiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiZWxlbWVudCIsInByZXBlbmQiLCJyZW5kZXJJdGVtcyIsIm5ld0Zvcm1WYWxpZGF0b3IiXSwic291cmNlUm9vdCI6IiJ9